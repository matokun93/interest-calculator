{"version":3,"sources":["Components/Container.js","Components/Section.js","Components/Input.js","Components/Button.js","Components/Balance.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Section","section","Control","Label","label","MyInput","input","ErrorMessage","Input","props","useField","field","meta","touched","error","Button","button","Balance","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","App","useState","balance","setBalance","initialValues","deposit","contribution","years","rate","onSubmit","val","total","i","Math","round","compoundInterest","Number","format","validationSchema","Yup","required","typeError","min","max","name","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAYeA,EAVGC,IAAOC,IAAV,wMCSAC,EATCF,IAAOG,QAAV,kN,mCCCPC,EAAUJ,IAAOC,IAAV,sDAGPI,EAAQL,IAAOM,MAAV,4FAMLC,EAAUP,IAAOQ,MAAV,8IAQPC,EAAeT,IAAOC,IAAV,8CAqBHS,EAjBD,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,MAAUK,EAAY,iBACnC,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACI,eAACV,EAAD,WACI,cAACC,EAAD,UACKC,IAEL,cAACC,EAAD,2BAAaM,GAAWF,IACvBG,EAAKC,SAAWD,EAAKE,MACf,eAACP,EAAD,eAAgBK,EAAKE,MAArB,OACD,SCvBHC,EAVAjB,IAAOkB,OAAV,uMCOGC,EAPCnB,IAAOC,IAAV,0HCiBPmB,G,OAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,KAoDVC,EAjDH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OACE,8BACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,IAAD,CACEC,cAAe,CACbC,QAAS,GACTC,aAAc,GACdC,MAAO,GACPC,KAAM,IAERC,SAhBW,SAAC,GAA4C,IAA1CJ,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9CE,EApBe,SAACL,EAASC,EAAcC,EAAOC,GAEtD,IADA,IAAIG,EAAQN,EACHO,EAAI,EAAGA,EAAIL,EAAOK,IACzBD,GAASA,EAAQL,IAAiBE,EAAO,GAG3C,OAAOK,KAAKC,MAAMH,GAcJI,CAAiBC,OAAOX,GAAUW,OAAOV,GAAeU,OAAOT,GAAQS,OAAOR,IAC1FL,EAAWV,EAAUwB,OAAOP,KAepBQ,iBAAkBC,IAAW,CAC3Bd,QAASc,MAAaC,SAAS,eAAeC,UAAU,yBACxDf,aAAca,MAAaC,SAAS,eAAeC,UAAU,yBAC7Dd,MAAOY,MAAaC,SAAS,eAAeC,UAAU,yBACtDb,KACEW,MACGC,SAAS,eACTC,UAAU,yBACVC,IAAI,EAAG,2BACPC,IAAI,EAAG,6BAjBhB,SAoBE,eAAC,IAAD,WACE,cAAC,EAAD,CAAOC,KAAK,UAAU7C,MAAM,qBAC5B,cAAC,EAAD,CAAO6C,KAAK,eAAe7C,MAAM,oBACjC,cAAC,EAAD,CAAO6C,KAAK,QAAQ7C,MAAM,YAC1B,cAAC,EAAD,CAAO6C,KAAK,OAAO7C,MAAM,wBACzB,cAAC,EAAD,CAAQ8C,KAAK,SAAb,2BAGS,KAAZvB,EACG,eAAC,EAAD,6BAAyBA,EAAzB,OACA,aCxDCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2c8ef977.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    /* background-color: #B5DDF7; */\r\n    background-color: #B5DDF7;\r\n    \r\n`\r\n\r\nexport default Container","import styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\n    background-color: #C1DFF0;\r\n    border-top: 2px solid #385F71;\r\n    padding: 20px 25px;\r\n    width: 500px;\r\n    box-shadow: 0px 2px 3px rgb(0,0,0,0.3);\r\n    border-radius: 5px;\r\n`\r\n\r\nexport default Section","import styled from 'styled-components'\r\nimport { useField } from 'formik'\r\n\r\nconst Control = styled.div`\r\n    margin-bottom: 20px;\r\n`\r\nconst Label = styled.label`\r\n    margin-bottom: 5px;\r\n    display: block;\r\n    color: #000;\r\n`\r\n\r\nconst MyInput = styled.input`\r\n    outline: none;\r\n    padding: 8px;\r\n    border: 1px solid #b1b3b5;\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: #f00;\r\n`\r\n\r\nconst Input = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <Control>\r\n            <Label>\r\n                {label}\r\n            </Label>\r\n            <MyInput {...field} {...props} />\r\n            {meta.touched && meta.error\r\n                ? (<ErrorMessage> {meta.error} </ErrorMessage>)\r\n                : null\r\n            }\r\n        </Control>\r\n    )\r\n}\r\n\r\nexport default Input","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n    background: #385F71;\r\n    color: white;\r\n    font-size: 1em;\r\n    padding: 0.25em 1em;\r\n    border: 2px solid #385F71;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport default Button","import styled from 'styled-components'\r\n\r\nconst Balance = styled.div`\r\n    font-size: 36px;\r\n    margin-top: 12px;\r\n    display: inline-block;\r\n    color: #385F71;\r\n`\r\n\r\nexport default Balance","import { useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport Container from './Components/Container'\nimport Section from './Components/Section'\nimport Input from './Components/Input'\nimport Button from './Components/Button'\nimport Balance from './Components/Balance'\nimport { number } from 'yup/lib/locale'\n\nconst compoundInterest = (deposit, contribution, years, rate) => {\n  let total = deposit\n  for (let i = 0; i < years; i++) {\n    total = (total + contribution) * (rate + 1)\n  }\n\n  return Math.round(total)\n}\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n})\n\nconst App = () => {\n  const [balance, setBalance] = useState('')\n\n  const handleSubmit = ({ deposit, contribution, years, rate }) => {\n    const val = compoundInterest(Number(deposit), Number(contribution), Number(years), Number(rate))\n    setBalance(formatter.format(val))\n  }\n\n  return (\n    <div>\n      <Container>\n        <Section>\n          <Formik\n            initialValues={{\n              deposit: '',\n              contribution: '',\n              years: '',\n              rate: '',\n            }}\n            onSubmit={handleSubmit}\n            validationSchema={Yup.object({\n              deposit: Yup.number().required('Obligatorio').typeError('Debe ser un número'),\n              contribution: Yup.number().required('Obligatorio').typeError('Debe ser un número'),\n              years: Yup.number().required('Obligatorio').typeError('Debe ser un número'),\n              rate:\n                Yup.number()\n                  .required('Obligatorio')\n                  .typeError('Debe ser un número')\n                  .min(0, 'El valor mínimo es 0')\n                  .max(1, 'El valor máximo es 1')\n            })}\n          >\n            <Form>\n              <Input name='deposit' label='Deposito inicial' />\n              <Input name='contribution' label='Contribución' />\n              <Input name='years' label='Años' />\n              <Input name='rate' label='Interés estimado' />\n              <Button type='submit'>Calcular</Button>\n            </Form>\n          </Formik>\n          {balance !== ''\n            ? <Balance>Balance final: {balance} </Balance>\n            : null}\n        </Section>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}